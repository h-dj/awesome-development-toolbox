
  # ip地址可以换成内网ip
  upstream nexus_docker_get {
      server nexus3:6667;
  }

  upstream nexus_docker_put {
      server nexus3:6666;
  }

  server {
    listen 80;#监听端口
    charset utf-8;#编码格式
    server_name local.docker.io;
    rewrite ^(.*) https://$server_name$1 permanent;
  }

  server {
     listen 443 ssl;# 监听 ssl 443 端口
     charset utf-8;#编码格式
      server_name local.docker.io;
      access_log /var/log/nginx/local.docker.io.log;
      # 证书
      ssl_certificate /etc/nginx/conf.d/ssl/out/idocker.io/idocker.io.crt; # 证书路径根据上面生成的来定
      ssl_certificate_key /etc/nginx/conf.d/ssl/out/idocker.io/idocker.io.key.pem;
      ssl_protocols TLSv1.1 TLSv1.2;
      ssl_ciphers '!aNULL:kECDH+AESGCM:ECDH+AESGCM:RSA+AESGCM:kECDH+AES:ECDH+AES:RSA+AES:';
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:10m;
      # disable any limits to avoid HTTP 413 for large image uploads
      client_max_body_size 0;
      # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
      chunked_transfer_encoding on;


          # 设置默认使用推送代理
      set $upstream "nexus_docker_put";
      # 当请求是GET，也就是拉取镜像的时候，这里改为拉取代理，如此便解决了拉取和推送的端口统一
      if ( $request_method ~* 'GET') {
          set $upstream "nexus_docker_get";
      }
      # 只有本地仓库才支持搜索，所以将搜索请求转发到本地仓库，否则出现500报错
      if ($request_uri ~ '/search') {
          set $upstream "nexus_docker_put";
      }
      location / {
          proxy_pass http://$upstream;
          proxy_set_header Host $host;
          proxy_connect_timeout 3600;
          proxy_send_timeout 3600;
          proxy_read_timeout 3600;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_buffering off;
          proxy_request_buffering off;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto http;
      }
  }

