version: "3"
services:
  master:
    container_name: master
    image: 'mysql:8.0'
    restart: 'no'
    privileged: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    volumes:
      - master-data:/var/lib/mysql
      - ./conf/master.cnf:/etc/mysql/my.cnf:ro
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - 7001:3306
    networks:
      mysql-mgr:
       ipv4_address: 192.168.1.10
  slave1:
    container_name: slave1
    image: 'mysql:8.0'
    restart: always
    privileged: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    volumes:
      - slave1-data:/var/lib/mysql
      - ./conf/slave1.cnf:/etc/mysql/my.cnf:ro
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - 7002:3306
    networks:
      mysql-mgr:
       ipv4_address: 192.168.1.11
    depends_on:
      - master
  slave2:
    container_name: slave2
    image: 'mysql:8.0'
    restart: always
    privileged: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    volumes:
      - slave2-data:/var/lib/mysql
      - ./conf/slave2.cnf:/etc/mysql/my.cnf:ro
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - 7003:3306
    networks:
      mysql-mgr:
       ipv4_address: 192.168.1.12
    depends_on:
      - master

volumes:
  master-data:
  slave1-data:
  slave2-data:
networks:
  mysql-mgr:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1
          ip_range: 192.168.1.2/27  # 可选：指定 IP 地址范围