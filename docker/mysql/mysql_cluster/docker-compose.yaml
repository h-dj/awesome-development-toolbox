version: "3"
services:
  mysql_master:
    container_name: mysql_master
    image: 'mysql:8.0'
    volumes:
      - db-data-master:/var/lib/mysql
      - ./conf/master.cnf:/etc/mysql/my.cnf
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    ports:
      - "4400:3306"
    restart: always
    privileged: true
    networks:
      - mysql-replicanet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql_slave_1:
    image: 'mysql:8.0'
    container_name: mysql_slave_1
    volumes:
      - db-data-slave1:/var/lib/mysql
      - ./conf/slave1.cnf:/etc/mysql/my.cnf
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    ports:
      - "4401:3306"
    restart: always
    privileged: true
    networks:
      - mysql-replicanet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql_master:
        condition: service_healthy
  
  mysql_slave_2:
    image: 'mysql:8.0'
    container_name: mysql_slave_2
    volumes:
      - db-data-slave2:/var/lib/mysql
      - ./conf/slave2.cnf:/etc/mysql/my.cnf
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    ports:
      - "4402:3306"
    restart: always
    privileged: true
    networks:
      - mysql-replicanet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql_master:
        condition: service_healthy
  mysql_init:
      image: 'mysql:8.0'
      container_name: mysql_init
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_REPL_USER=${MYSQL_REPL_USER}
        - MYSQL_REPL_PASSWORD=${MYSQL_REPL_PASSWORD}
        - TZ=Asia/Shanghai
      privileged: true
      restart: always
      networks:
        - mysql-replicanet
      depends_on:
        mysql_master:
          condition: service_healthy
        mysql_slave_1:
          condition: service_healthy
        mysql_slave_2:
          condition: service_healthy
      entrypoint: ["sh", "-c", "
                  sleep 10
                  &&  mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\" -h192.168.56.200 -P4401 -e \"STOP REPLICA; change master to master_host='192.168.56.200',master_port=4400,master_auto_position=1; START REPLICA USER='\"$MYSQL_REPL_USER\"' PASSWORD='\"$MYSQL_REPL_PASSWORD\"';\"
                  &&  mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\" -h192.168.56.200 -P4402 -e \"STOP REPLICA; change master to master_host='192.168.56.200',master_port=4400,master_auto_position=1; START REPLICA USER='\"$MYSQL_REPL_USER\"' PASSWORD='\"$MYSQL_REPL_PASSWORD\"';\"
                  &&  echo 'MySQL replication configured successfully.'
                "]
      command: ["/bin/true"]  # 确保容器在完成任务后立即退出
networks:
  mysql-replicanet:
    driver: bridge
volumes:
  db-data-master:
  db-data-slave1:
  db-data-slave2: