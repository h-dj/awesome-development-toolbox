
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka
data:
  server.properties: |
    log.dirs=/opt/bitnami/kafka/logs
    zookeeper.connect=zk-cs.zookeeper:2181
    listeners=PLAINTEXT://:9092,EXTERNAL://:9094
    listener.security.protocol.map=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
---

# Client Service，用于 K8S 集群内的应用访问 kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka-cs
  namespace: kafka
  labels:
    app: kafka
spec:
  ports:
    - name: internal 
      protocol: TCP
      port: 9092
      targetPort: 9092
  selector:
    app: kafka
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc-0
  namespace: kafka
  labels:
    app: kafka
spec:
  type: NodePort
  ports:
    - name: tcp-client
      port: 9094
      targetPort: 9094
      nodePort: 30992
  selector:
    statefulset.kubernetes.io/pod-name: kafka-0
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc-1
  namespace: kafka
  labels:
    app: kafka
spec:
  type: NodePort
  ports:
    - name: tcp-client
      port: 9094
      targetPort: 9094
      nodePort: 30993
  selector:
    statefulset.kubernetes.io/pod-name: kafka-1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc-2
  namespace: kafka
  labels:
    app: kafka
spec:
  type: NodePort
  ports:
    - name: tcp-client
      port: 9094
      targetPort: 9094
      nodePort: 30994
  selector:
    statefulset.kubernetes.io/pod-name: kafka-2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-cs
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: kafka
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: kafka
          image: bitnami/kafka:3.4
          imagePullPolicy: "IfNotPresent"
          command:
          - bash
          - -ec
          - |
            HOSTNAME=`hostname -s`
            if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
              ORD=${BASH_REMATCH[2]}
              PORT=$((ORD + 30992))
              echo "$PORT"
              export KAFKA_CFG_ADVERTISED_LISTENERS="PLAINTEXT://:9092,EXTERNAL://192.168.56.80:$PORT"
            else
              echo "Failed to get index from hostname $HOST"
              exit 1
            fi
            exec /entrypoint.sh /run.sh
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001 
          resources:
              requests:
                  cpu: 50m
                  memory: 500Mi
              limits:
                  cpu: 100m
                  memory: 1000Mi
          ports:
            - name: inner-http
              containerPort: 9092
            - name: http
              containerPort: 9094
          volumeMounts:         
            - name: kafka-data
              mountPath: /bitnami/kafka
            - name: kafka-config
              mountPath: /bitnami/kafka/config
      volumes:
        - name: kafka-config
          configMap:
            name: kafka-config
            items:
              - key: server.properties
                path: server.properties
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "local"
        resources:
          requests:
            storage: 10Gi